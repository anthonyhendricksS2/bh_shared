~~~ Creating an AWS User ~~~

aws iam list-users # list current AWS users

aws iam create-user --user-name MyUsername # create new user

aws iam list-groups # find the group with the highest permissions

aws iam add-user-to-group --group-name AdministratorAccess --user-name MyUsername # add user to admin group

aws iam list-groups-for-user --user-name MyUsername # verify user is in group

aws iam list-attached-user-policies --user-name admin_user # examine policies attached to admin_user

aws iam attach-user-policy --user-name MyUsername --policy-arn "arn:aws:iam::aws:policy/AdministratorAccess" # add specific policy to new user

aws iam attach-user-policy --user-name MyUsername --policy-arn "arn:aws:iam::aws:policy/IAMUserChangePassword" # add specific policy to new user

aws iam list-attached-user-policies --user-name MyUsername # verify policies were attached

~~~ Get Console Access ~~~

aws iam create-login-profile --user-name MyUsername --password "||16$lift$FRONT$sold$23||" # create a console login for new user

aws sts get-caller-identity # get the account number to allow console login

aws iam list-users

~~~ Get API Access ~~~

aws iam create-access-key --user-name MyUsername # create AWS API keys for new user

aws sts get-session-token # create session token

~~~ STS Persist ~~~

cd /opt # 

git clone https://github.com/cno-io/sts_persist.git

cd sts_persist

ifconfig eth0

ls

aws sts get-caller-identity --profile 480927147553:awstrainingstack001-bluelizardPrivEC2Role-16N8SQZR1JKII

crontab -e

crontab -l